{"version":3,"sources":["components/Navbar.js","components/form.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","Mystyle","color","mode","backgroundColor","react_default","a","createElement","className","concat","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","dist","to","style","title","onClick","togglemode","Form","_useState","useState","_useState2","Object","slicedToArray","text","setText","_useState3","_useState4","len","setLen","htmlFor","heading","rows","value","onChange","e","target","crt","split","filter","word","length","txt_len","btn_color","toUpperCase","txt","i","substring","toLowerCase","Alert","height","alert","role","msg","App","setMode","setAlert","_useState5","c1","c2","_useState6","Colors","setColors","ShowAlert","message","setTimeout","Fragment","document","body","components_Alert","react_router_dist","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.677338c9.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props){\r\n    const Mystyle={\r\n        color:props.mode === 'dark' ? 'white' : 'black',\r\n        backgroundColor: props.mode === 'dark' ? 'black' : 'white'\r\n    }\r\n    return (\r\n        <nav className={`navbar navbar-expand-sm bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <Link className={`navbar-brand`} to=\"/\" style={\r\n                            {\r\n                                color:props.mode==='dark'?'white':'black'\r\n                            }}>{props.title}\r\n                        </Link>\r\n                        <Link className='nav-link' to='/' style={{color:Mystyle.color}}>Home</Link>\r\n                    </ul>\r\n                    <div className=\"form-check form-switch mx-3 my-3 navtoggle\">\r\n                        <input className=\"form-check-input mode\" type=\"checkbox\"  id=\"flexSwitchCheckChecked\" onClick={props.togglemode}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Form(props) {\r\n    const all_upper = () => {\r\n        setText(text.toUpperCase())\r\n    }\r\n    const all_lower = () => {\r\n        setText(text.toLowerCase())\r\n    }\r\n    const first_letter_upper = () => {\r\n        var a = text.split(' ')\r\n        var txt = ''\r\n        for (let i = 0; i < a.length; i++) {\r\n            if (a[i] === '') {\r\n                continue\r\n            }\r\n            else {\r\n                var e = a[i].substring(1)\r\n                e = e.toLowerCase();\r\n                a[i] = a[i][0].toUpperCase() + e\r\n                txt = txt.concat(a[i], \" \")\r\n            }\r\n        }\r\n        setText(txt)\r\n        // document.querySelector('label').innerHTML=\"Text Converted !!\"\r\n    }\r\n    const txt_len = () => {\r\n        const txt = text.split(/\\s+/).filter(word => word !== '');\r\n        const crt = txt.length;\r\n        setLen(crt);\r\n    };\r\n    const handelOnChange = (e) => {\r\n        setText(e.target.value)\r\n        txt_len()\r\n    }\r\n    // console.log(txt_len);\r\n    const [text, setText] = useState('enter text here');\r\n    const [len, setLen] = useState(3);\r\n    const Mystyle = {\r\n        color: props.mode === 'dark' ? 'white' : 'black',\r\n        backgroundColor: props.mode === 'dark' ? 'black' : 'white'\r\n    }\r\n    return (\r\n        <div className='container form'>\r\n            <h2>\r\n                <div className=\"mb-3 label-txt\">\r\n                    <label htmlFor=\"exampleFormControlTextarea1\" className=\"form-label\"\r\n                        style={{ color: Mystyle.color }}>{props.heading}</label>\r\n                    <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"8\" value={text} onChange={handelOnChange}\r\n                        style={\r\n                            {\r\n                                color: Mystyle.color,\r\n                                backgroundColor: Mystyle.backgroundColor\r\n                            }\r\n                        }></textarea>\r\n                </div>\r\n                <button className={`btn btn-${props.btn_color} mx-1`} onClick={all_upper}>CONVERT</button>\r\n                <button className={`btn btn-${props.btn_color} mx-1`} onClick={first_letter_upper}>Convert</button>\r\n                <button className={`btn btn-${props.btn_color} mx-1`} onClick={all_lower}>convert</button>\r\n                <section className='container info' style={\r\n                    {\r\n                        color: Mystyle.color\r\n                    }\r\n                }>\r\n                    <h3>\r\n                        words:{len}\r\n                    </h3>\r\n                    <h3>\r\n                        characters:{text.length}\r\n                    </h3>\r\n                </section>\r\n            </h2>\r\n        </div>\r\n    )\r\n}\r\nForm.propTypes = {\r\n    heading: PropTypes.string,\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props){\r\n    return (\r\n        <div style={\r\n            {\r\n                height:'60px'\r\n\r\n            }\r\n        }>\r\n            {props.alert &&\r\n            <div>\r\n                <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                    <strong>Success:</strong>{props.alert.msg}\r\n                </div>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\nexport default Alert","// import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Form from './components/form';\nimport Alert from './components/Alert';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route\n} from \"react-router-dom\";\nimport React, { useState } from 'react'\n\nfunction App() {\n  const [mode, setMode] = useState('light')\n  const [alert, setAlert] = useState(null)\n  const [Colors, setColors] = useState({\n    c1:'black',\n    c2:'white'\n  })\n  const ShowAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 2000);\n  }\n  const togglemode = () => {\n    if (mode === 'dark') {\n      setMode('light')\n      ShowAlert(\"light mode enabled\", \"info\")\n      setColors('white')\n      document.body.style.backgroundColor ='white'\n    }\n    else {\n      setMode('dark')\n      ShowAlert(\"dark mode enabled\", \"info\")\n      document.body.style.backgroundColor ='black'\n    }\n  }\n\n  return (\n    <>\n      <Router>\n        <Navbar mode={mode} title='Text Editor' togglemode={togglemode}/>\n        <Alert alert={alert} />\n        <Routes>\n          <Route path='/' element={<Form heading='enter the text' btn_color='primary' mode={mode} color={Colors}/>}/>\n        </Routes>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}